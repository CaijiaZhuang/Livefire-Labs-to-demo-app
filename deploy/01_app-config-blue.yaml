apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config-blue
  namespace: sandbox
data:
  delivery-app-tags.yaml: |
    application: sandbox
    cluster: us-west
    service: delivery
    shard: blue
    customTags:
      location: Palo-Alto
      env: production
  delivery-app.yml: |
    server:
      port: 50054
    
    notificationHost: notification
    notificationPort: 50056
    
    applicationTagsYamlFile: "/conf/delivery-app-tags.yaml"
    wfReportingConfigYamlFile: "/conf/wf-config.yaml"
  inventory.conf: |
    {
    	"application": "sandbox",
    	"service":     "inventory",
    	"cluster":     "us-west",
    	"shard":       "blue",
    
    	"inventoryHost": "0.0.0.0:60001",
    	"warehouseHost": "warehouse:50060",
    
        "server":"https://YOUR_CLUSTER.wavefront.com",
        "token":"YOUR_API_TOKEN",
    
    	"simFailCheckout":  0.02,
    	"simFailAvailable": 0.03,
    	"simDelayChance":   0.3333,
    	"simDelayMS":       1000,
    	"simDelayCpuPct":   0.4
    }
  notification-app-tags.yaml: |
    application: sandbox
    cluster: us-west
    service: notification
    shard: blue
    customTags:
      location: Palo-Alto
      env: production
  notification-app.yml: |
    server:
      port: 50056
    
    cxf:
      path: /
      jaxrs:
        component-scan: true
    
    applicationTagsYamlFile: "/conf/notification-app-tags.yaml"
    wfReportingConfigYamlFile: "/conf/wf-config.yaml"
  packaging-app-tags.yaml: |
    application: sandbox
    cluster: us-west
    service: packaging
    shard: blue
    customTags:
      location: Palo-Alto
      env: production
  packaging-app.yaml: |
    grpcPort: 50053
    applicationTagsYamlFile: "/conf/packaging-app-tags.yaml"
    wfReportingConfigYamlFile: "/conf/wf-config.yaml"
  payments-app-tags.yaml: |
    application: sandbox
    cluster: us-west
    service: payments
    shard: blue
    customTags:
      location: Palo-Alto
      env: production
  payments-app.yaml: |
    port: 50063
    applicationTagsYamlFile: "/conf/payments-app-tags.yaml"
    wfReportingConfigYamlFile: "/conf/wf-config.yaml"
  printing-app-tags.yaml: |
    application: sandbox
    cluster: us-west
    service: printing
    shard: blue
    customTags:
      location: Palo-Alto
      env: production
  printing-app.yaml: |
    grpcPort: 50052
    applicationTagsYamlFile: "/conf/printing-app-tags.yaml"
    wfReportingConfigYamlFile: "/conf/wf-config.yaml"
  shopping-app-tags.yaml: |
    application: sandbox
    cluster: us-west
    service: shopping
    shard: blue
    customTags:
      location: Palo-Alto
      env: production
  shopping-app.yaml: |
    server:
      applicationConnectors:
      - type: http
        port: 50050
      adminConnectors:
      - type: http
        port: 50150
    
    inventoryPort: 60001
    paymentsPort: 50063
    stylingPort: 50051
    deliveryPort: 50054
    
    inventoryHost: "inventory"
    paymentsHost: "payments"
    stylingHost: "styling"
    deliveryHost: "delivery"
    
    applicationTagsYamlFile: "/conf/shopping-app-tags.yaml"
    wfReportingConfigYamlFile: "/conf/wf-config.yaml"
  styling-app-tags.yaml: |
    application: sandbox
    cluster: us-west
    service: styling
    shard: blue
    customTags:
      location: Palo-Alto
      env: production
  styling-app.yaml: |
    server:
      applicationConnectors:
      - type: http
        port: 50051
      adminConnectors:
      - type: http
        port: 50151
    
    inventoryPort: 60001
    printingPort: 50052
    packagingPort: 50053
    shoppingPort: 50050
    
    inventoryHost: "inventory"
    printingHost: "printing"
    packagingHost: "packaging"
    shoppingHost: "shopping"
    
    applicationTagsYamlFile: "/conf/styling-app-tags.yaml"
    wfReportingConfigYamlFile: "/conf/wf-config.yaml"
  warehouse-app-tags.yaml: |
    application: sandbox
    cluster: us-west
    service: warehouse
    shard: blue
    customTags:
      location: Palo-Alto
      env: production
  wf-config.yaml: |
    reportingMechanism: direct
    
    ## demo
    server: https://YOUR_CLUSTER.wavefront.com
    token: YOUR_API_TOKEN
    
    reportTraces: true
